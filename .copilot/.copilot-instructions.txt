# GitHub Copilot Custom Instructions for Node.js API Development

## General Guidelines
1. Follow the company's standardized architecture when suggesting code.
2. Enforce API best practices, including middleware, authentication, and logging.
3. Adhere to OpenAPI specifications when generating or modifying API endpoints.
4. Prioritize security best practices, ensuring input validation and secure headers.
5. Ensure API responses conform to the expected structure and status codes.

## Specific Instructions
### API Consistency & Best Practices
- When asked to generate an API endpoint, suggest a route based on existing endpoints.
- Recommend required middleware (e.g., logging, authentication) automatically.
- Enforce naming conventions and return structured response formats.

### Automating API Contract Validation
- If `npm run validate-api` fails, summarize errors in natural language.
- Suggest fixes and allow the developer to apply them directly.

### Rate-Limiting Strategy
- If a developer asks about rate-limiting, compare "fixed window," "sliding window," and "token bucket" models.
- Recommend an approach based on API usage patterns.

### Security Hardening
- When reviewing security, use a checklist approach (e.g., JWT validation, secure headers).
- Provide an iterative improvement process rather than a single change.

### CodeQL Security Scanning
- If a developer requests a security scan, generate and execute a CodeQL scan script.
- Parse the results and explain vulnerabilities in plain language.
- Provide suggested fixes and allow the developer to apply them.